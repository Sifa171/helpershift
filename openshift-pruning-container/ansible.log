2019-04-11 15:11:18,396 passlib.registry registered 'md5_crypt' handler: <class 'passlib.handlers.md5_crypt.md5_crypt'>
2019-04-11 15:11:18,404 p=1869 u=z-scm |  PLAY [localhost] *****************************************************************************************************************************************************************************************************************************
2019-04-11 15:11:18,418 p=1869 u=z-scm |  TASK [createDirectory : Create tmp directory for YAML files] *********************************************************************************************************************************************************************************
2019-04-11 15:11:18,747 p=1869 u=z-scm |  ok: [localhost]
2019-04-11 15:11:18,753 p=1869 u=z-scm |  TASK [createServiceAccount : Create ServiceAccount YAML] *************************************************************************************************************************************************************************************
2019-04-11 15:11:19,214 p=1869 u=z-scm |  ok: [localhost]
2019-04-11 15:11:19,220 p=1869 u=z-scm |  TASK [createRoleBinding : Create RoleBinding YAML] *******************************************************************************************************************************************************************************************
2019-04-11 15:11:19,507 p=1869 u=z-scm |  ok: [localhost]
2019-04-11 15:11:19,512 p=1869 u=z-scm |  TASK [createCronJobs : Create Prune-Build Cronjob YAML] **************************************************************************************************************************************************************************************
2019-04-11 15:11:19,809 p=1869 u=z-scm |  ok: [localhost]
2019-04-11 15:11:19,815 p=1869 u=z-scm |  TASK [createCronJobs : Create Prune-Deployments Cronjob YAML] ********************************************************************************************************************************************************************************
2019-04-11 15:11:20,097 p=1869 u=z-scm |  ok: [localhost]
2019-04-11 15:11:20,104 p=1869 u=z-scm |  TASK [createCronJobs : Create Prune-Images Cronjob YAML] *************************************************************************************************************************************************************************************
2019-04-11 15:11:20,404 p=1869 u=z-scm |  ok: [localhost]
2019-04-11 15:11:20,416 p=1869 u=z-scm |  TASK [createRessourcesInOpenshift : Fetch admin.kubeconfig from OpenShift Master] ************************************************************************************************************************************************************
2019-04-11 15:11:20,958 p=1869 u=z-scm |  changed: [localhost -> sdea-ocpma-s100.sys.schwarz]
2019-04-11 15:11:20,968 p=1869 u=z-scm |  TASK [createRessourcesInOpenshift : Create serviceAccount and roleBinding] *******************************************************************************************************************************************************************
2019-04-11 15:11:21,298 p=1869 u=z-scm |  fatal: [localhost -> localhost]: FAILED! => {"changed": false, "cmd": "/home/z-scm/helpershift/openshift-pruning-container/playbooks/scripts/misc-setup.sh", "msg": "[Errno 2] No such file or directory", "rc": 2}
2019-04-11 15:11:21,301 p=1869 u=z-scm |  PLAY RECAP ***********************************************************************************************************************************************************************************************************************************
2019-04-11 15:11:21,301 p=1869 u=z-scm |  localhost                  : ok=7    changed=1    unreachable=0    failed=1   
2019-04-11 15:13:06,103 passlib.registry registered 'md5_crypt' handler: <class 'passlib.handlers.md5_crypt.md5_crypt'>
2019-04-11 15:13:06,110 p=2248 u=z-scm |  PLAY [localhost] *****************************************************************************************************************************************************************************************************************************
2019-04-11 15:13:06,123 p=2248 u=z-scm |  TASK [createDirectory : Create tmp directory for YAML files] *********************************************************************************************************************************************************************************
2019-04-11 15:13:06,462 p=2248 u=z-scm |  ok: [localhost]
2019-04-11 15:13:06,468 p=2248 u=z-scm |  TASK [createServiceAccount : Create ServiceAccount YAML] *************************************************************************************************************************************************************************************
2019-04-11 15:13:06,936 p=2248 u=z-scm |  ok: [localhost]
2019-04-11 15:13:06,943 p=2248 u=z-scm |  TASK [createRoleBinding : Create RoleBinding YAML] *******************************************************************************************************************************************************************************************
2019-04-11 15:13:07,250 p=2248 u=z-scm |  ok: [localhost]
2019-04-11 15:13:07,256 p=2248 u=z-scm |  TASK [createCronJobs : Create Prune-Build Cronjob YAML] **************************************************************************************************************************************************************************************
2019-04-11 15:13:07,554 p=2248 u=z-scm |  ok: [localhost]
2019-04-11 15:13:07,561 p=2248 u=z-scm |  TASK [createCronJobs : Create Prune-Deployments Cronjob YAML] ********************************************************************************************************************************************************************************
2019-04-11 15:13:07,854 p=2248 u=z-scm |  ok: [localhost]
2019-04-11 15:13:07,859 p=2248 u=z-scm |  TASK [createCronJobs : Create Prune-Images Cronjob YAML] *************************************************************************************************************************************************************************************
2019-04-11 15:13:08,146 p=2248 u=z-scm |  ok: [localhost]
2019-04-11 15:13:08,157 p=2248 u=z-scm |  TASK [createRessourcesInOpenshift : Fetch admin.kubeconfig from OpenShift Master] ************************************************************************************************************************************************************
2019-04-11 15:13:08,518 p=2248 u=z-scm |  ok: [localhost -> sdea-ocpma-s100.sys.schwarz]
2019-04-11 15:13:08,529 p=2248 u=z-scm |  TASK [createRessourcesInOpenshift : Create serviceAccount and roleBinding] *******************************************************************************************************************************************************************
2019-04-11 15:13:08,828 p=2248 u=z-scm |  fatal: [localhost -> localhost]: FAILED! => {"changed": false, "cmd": "/home/z-scm/helpershift/openshift-pruning-container/playbooks/scripts/misc-setup.sh", "msg": "[Errno 13] Permission denied", "rc": 13}
2019-04-11 15:13:08,830 p=2248 u=z-scm |  PLAY RECAP ***********************************************************************************************************************************************************************************************************************************
2019-04-11 15:13:08,830 p=2248 u=z-scm |  localhost                  : ok=7    changed=0    unreachable=0    failed=1   
2019-04-11 15:13:37,066 passlib.registry registered 'md5_crypt' handler: <class 'passlib.handlers.md5_crypt.md5_crypt'>
2019-04-11 15:13:37,073 p=2427 u=z-scm |  PLAY [localhost] *****************************************************************************************************************************************************************************************************************************
2019-04-11 15:13:37,086 p=2427 u=z-scm |  TASK [createDirectory : Create tmp directory for YAML files] *********************************************************************************************************************************************************************************
2019-04-11 15:13:37,408 p=2427 u=z-scm |  ok: [localhost]
2019-04-11 15:13:37,414 p=2427 u=z-scm |  TASK [createServiceAccount : Create ServiceAccount YAML] *************************************************************************************************************************************************************************************
2019-04-11 15:13:37,869 p=2427 u=z-scm |  ok: [localhost]
2019-04-11 15:13:37,875 p=2427 u=z-scm |  TASK [createRoleBinding : Create RoleBinding YAML] *******************************************************************************************************************************************************************************************
2019-04-11 15:13:38,163 p=2427 u=z-scm |  ok: [localhost]
2019-04-11 15:13:38,169 p=2427 u=z-scm |  TASK [createCronJobs : Create Prune-Build Cronjob YAML] **************************************************************************************************************************************************************************************
2019-04-11 15:13:38,467 p=2427 u=z-scm |  ok: [localhost]
2019-04-11 15:13:38,472 p=2427 u=z-scm |  TASK [createCronJobs : Create Prune-Deployments Cronjob YAML] ********************************************************************************************************************************************************************************
2019-04-11 15:13:38,818 p=2427 u=z-scm |  ok: [localhost]
2019-04-11 15:13:38,823 p=2427 u=z-scm |  TASK [createCronJobs : Create Prune-Images Cronjob YAML] *************************************************************************************************************************************************************************************
2019-04-11 15:13:39,121 p=2427 u=z-scm |  ok: [localhost]
2019-04-11 15:13:39,133 p=2427 u=z-scm |  TASK [createRessourcesInOpenshift : Fetch admin.kubeconfig from OpenShift Master] ************************************************************************************************************************************************************
2019-04-11 15:13:39,507 p=2427 u=z-scm |  ok: [localhost -> sdea-ocpma-s100.sys.schwarz]
2019-04-11 15:13:39,517 p=2427 u=z-scm |  TASK [createRessourcesInOpenshift : Create serviceAccount and roleBinding] *******************************************************************************************************************************************************************
2019-04-11 15:13:40,178 p=2427 u=z-scm |  fatal: [localhost -> localhost]: FAILED! => {"changed": true, "cmd": ["/home/z-scm/helpershift/openshift-pruning-container/playbooks/scripts/misc-setup.sh"], "delta": "0:00:00.367449", "end": "2019-04-11 15:13:40.164676", "msg": "non-zero return code", "rc": 1, "start": "2019-04-11 15:13:39.797227", "stderr": "Error: unknown command \"./playbooks/tmp/crb.yml\" for \"oc\"\nRun 'oc --help' for usage.\nError: unknown command \"./playbooks/tmp/sa.yml\" for \"oc\"\nRun 'oc --help' for usage.", "stderr_lines": ["Error: unknown command \"./playbooks/tmp/crb.yml\" for \"oc\"", "Run 'oc --help' for usage.", "Error: unknown command \"./playbooks/tmp/sa.yml\" for \"oc\"", "Run 'oc --help' for usage."], "stdout": "", "stdout_lines": []}
2019-04-11 15:13:40,179 p=2427 u=z-scm |  PLAY RECAP ***********************************************************************************************************************************************************************************************************************************
2019-04-11 15:13:40,179 p=2427 u=z-scm |  localhost                  : ok=7    changed=0    unreachable=0    failed=1   
2019-04-11 15:14:59,137 passlib.registry registered 'md5_crypt' handler: <class 'passlib.handlers.md5_crypt.md5_crypt'>
2019-04-11 15:14:59,145 p=2728 u=z-scm |  PLAY [localhost] *****************************************************************************************************************************************************************************************************************************
2019-04-11 15:14:59,159 p=2728 u=z-scm |  TASK [createDirectory : Create tmp directory for YAML files] *********************************************************************************************************************************************************************************
2019-04-11 15:14:59,486 p=2728 u=z-scm |  ok: [localhost]
2019-04-11 15:14:59,492 p=2728 u=z-scm |  TASK [createServiceAccount : Create ServiceAccount YAML] *************************************************************************************************************************************************************************************
2019-04-11 15:14:59,952 p=2728 u=z-scm |  ok: [localhost]
2019-04-11 15:14:59,958 p=2728 u=z-scm |  TASK [createRoleBinding : Create RoleBinding YAML] *******************************************************************************************************************************************************************************************
2019-04-11 15:15:00,260 p=2728 u=z-scm |  ok: [localhost]
2019-04-11 15:15:00,265 p=2728 u=z-scm |  TASK [createCronJobs : Create Prune-Build Cronjob YAML] **************************************************************************************************************************************************************************************
2019-04-11 15:15:00,571 p=2728 u=z-scm |  ok: [localhost]
2019-04-11 15:15:00,577 p=2728 u=z-scm |  TASK [createCronJobs : Create Prune-Deployments Cronjob YAML] ********************************************************************************************************************************************************************************
2019-04-11 15:15:00,892 p=2728 u=z-scm |  ok: [localhost]
2019-04-11 15:15:00,898 p=2728 u=z-scm |  TASK [createCronJobs : Create Prune-Images Cronjob YAML] *************************************************************************************************************************************************************************************
2019-04-11 15:15:01,248 p=2728 u=z-scm |  ok: [localhost]
2019-04-11 15:15:01,260 p=2728 u=z-scm |  TASK [createRessourcesInOpenshift : Fetch admin.kubeconfig from OpenShift Master] ************************************************************************************************************************************************************
2019-04-11 15:15:01,703 p=2728 u=z-scm |  ok: [localhost -> sdea-ocpma-s100.sys.schwarz]
2019-04-11 15:15:01,720 p=2728 u=z-scm |  TASK [createRessourcesInOpenshift : Create serviceAccount and roleBinding] *******************************************************************************************************************************************************************
2019-04-11 15:15:02,542 p=2728 u=z-scm |  fatal: [localhost -> localhost]: FAILED! => {"changed": true, "cmd": ["/home/z-scm/helpershift/openshift-pruning-container/playbooks/scripts/misc-setup.sh"], "delta": "0:00:00.407646", "end": "2019-04-11 15:15:02.527631", "msg": "non-zero return code", "rc": 1, "start": "2019-04-11 15:15:02.119985", "stderr": "error: stat ../playbooks/tmp/admin.kubgeconfig: no such file or directory\nError: required flag(s) \"filename\" not set\n\n\nUsage:\n  oc create -f FILENAME [flags]\n\nExamples:\n  # Create a pod using the data in pod.json.\n  oc create -f pod.json\n  \n  # Create a pod based on the JSON passed into stdin.\n  cat pod.json | oc create -f -\n\nAvailable Commands:\n  clusterresourcequota Create cluster resource quota resource.\n  clusterrole          Create a ClusterRole.\n  clusterrolebinding   Create a ClusterRoleBinding for a particular ClusterRole\n  configmap            Create a configmap from a local file, directory or literal value\n  deployment           Create a deployment with the specified name.\n  deploymentconfig     Create deployment config with default options that uses a given image.\n  identity             Manually create an identity (only needed if automatic creation is disabled).\n  imagestream          Create a new empty image stream.\n  imagestreamtag       Create a new image stream tag.\n  job                  Create a job with the specified name.\n  namespace            Create a namespace with the specified name\n  poddisruptionbudget  Create a pod disruption budget with the specified name.\n  priorityclass        Create a priorityclass with the specified name.\n  quota                Create a quota with the specified name.\n  role                 Create a role with single rule.\n  rolebinding          Create a RoleBinding for a particular Role or ClusterRole\n  route                Expose containers externally via secured routes\n  secret               Create a secret using specified subcommand\n  service              Create a service using specified subcommand.\n  serviceaccount       Create a service account with the specified name\n  user                 Manually create a user (only needed if automatic creation is disabled).\n  useridentitymapping  Manually map an identity to a user.\n\nOptions:\n      --allow-missing-template-keys=true: If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats.\n      --dry-run=false: If true, only print the object that would be sent, without sending it.\n      --edit=false: Edit the API resource before creating\n  -f, --filename=[]: Filename, directory, or URL to files to use to create the resource\n  -o, --output='': Output format. One of: json|yaml|name|template|go-template|go-template-file|templatefile|jsonpath|jsonpath-file.\n      --raw='': Raw URI to POST to the server.  Uses the transport specified by the kubeconfig file.\n      --record=false: Record current kubectl command in the resource annotation. If set to false, do not record the command. If set to true, record the command. If not set, default to updating the existing annotation value only if one already exists.\n  -R, --recursive=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory.\n      --save-config=false: If true, the configuration of current object will be saved in its annotation. Otherwise, the annotation will be unchanged. This flag is useful when you want to perform kubectl apply on this object in the future.\n  -l, --selector='': Selector (label query) to filter on, supports '=', '==', and '!='.(e.g. -l key1=value1,key2=value2)\n      --template='': Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview].\n      --validate=false: If true, use a schema to validate the input before sending it\n      --windows-line-endings=false: Only relevant if --edit=true. Defaults to the line ending native to your platform.\n\nUse \"oc <command> --help\" for more information about a given command.\nUse \"oc options\" for a list of global command-line options (applies to all commands).", "stderr_lines": ["error: stat ../playbooks/tmp/admin.kubgeconfig: no such file or directory", "Error: required flag(s) \"filename\" not set", "", "", "Usage:", "  oc create -f FILENAME [flags]", "", "Examples:", "  # Create a pod using the data in pod.json.", "  oc create -f pod.json", "  ", "  # Create a pod based on the JSON passed into stdin.", "  cat pod.json | oc create -f -", "", "Available Commands:", "  clusterresourcequota Create cluster resource quota resource.", "  clusterrole          Create a ClusterRole.", "  clusterrolebinding   Create a ClusterRoleBinding for a particular ClusterRole", "  configmap            Create a configmap from a local file, directory or literal value", "  deployment           Create a deployment with the specified name.", "  deploymentconfig     Create deployment config with default options that uses a given image.", "  identity             Manually create an identity (only needed if automatic creation is disabled).", "  imagestream          Create a new empty image stream.", "  imagestreamtag       Create a new image stream tag.", "  job                  Create a job with the specified name.", "  namespace            Create a namespace with the specified name", "  poddisruptionbudget  Create a pod disruption budget with the specified name.", "  priorityclass        Create a priorityclass with the specified name.", "  quota                Create a quota with the specified name.", "  role                 Create a role with single rule.", "  rolebinding          Create a RoleBinding for a particular Role or ClusterRole", "  route                Expose containers externally via secured routes", "  secret               Create a secret using specified subcommand", "  service              Create a service using specified subcommand.", "  serviceaccount       Create a service account with the specified name", "  user                 Manually create a user (only needed if automatic creation is disabled).", "  useridentitymapping  Manually map an identity to a user.", "", "Options:", "      --allow-missing-template-keys=true: If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats.", "      --dry-run=false: If true, only print the object that would be sent, without sending it.", "      --edit=false: Edit the API resource before creating", "  -f, --filename=[]: Filename, directory, or URL to files to use to create the resource", "  -o, --output='': Output format. One of: json|yaml|name|template|go-template|go-template-file|templatefile|jsonpath|jsonpath-file.", "      --raw='': Raw URI to POST to the server.  Uses the transport specified by the kubeconfig file.", "      --record=false: Record current kubectl command in the resource annotation. If set to false, do not record the command. If set to true, record the command. If not set, default to updating the existing annotation value only if one already exists.", "  -R, --recursive=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory.", "      --save-config=false: If true, the configuration of current object will be saved in its annotation. Otherwise, the annotation will be unchanged. This flag is useful when you want to perform kubectl apply on this object in the future.", "  -l, --selector='': Selector (label query) to filter on, supports '=', '==', and '!='.(e.g. -l key1=value1,key2=value2)", "      --template='': Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview].", "      --validate=false: If true, use a schema to validate the input before sending it", "      --windows-line-endings=false: Only relevant if --edit=true. Defaults to the line ending native to your platform.", "", "Use \"oc <command> --help\" for more information about a given command.", "Use \"oc options\" for a list of global command-line options (applies to all commands)."], "stdout": "", "stdout_lines": []}
2019-04-11 15:15:02,543 p=2728 u=z-scm |  PLAY RECAP ***********************************************************************************************************************************************************************************************************************************
2019-04-11 15:15:02,543 p=2728 u=z-scm |  localhost                  : ok=7    changed=0    unreachable=0    failed=1   
2019-04-11 15:20:03,810 passlib.registry registered 'md5_crypt' handler: <class 'passlib.handlers.md5_crypt.md5_crypt'>
2019-04-11 15:20:03,817 p=4883 u=z-scm |  PLAY [localhost] *****************************************************************************************************************************************************************************************************************************
2019-04-11 15:20:03,830 p=4883 u=z-scm |  TASK [createDirectory : Create tmp directory for YAML files] *********************************************************************************************************************************************************************************
2019-04-11 15:20:04,180 p=4883 u=z-scm |  ok: [localhost]
2019-04-11 15:20:04,186 p=4883 u=z-scm |  TASK [createServiceAccount : Create ServiceAccount YAML] *************************************************************************************************************************************************************************************
2019-04-11 15:20:04,881 p=4883 u=z-scm |  ok: [localhost]
2019-04-11 15:20:04,887 p=4883 u=z-scm |  TASK [createRoleBinding : Create RoleBinding YAML] *******************************************************************************************************************************************************************************************
2019-04-11 15:20:05,299 p=4883 u=z-scm |  ok: [localhost]
2019-04-11 15:20:05,307 p=4883 u=z-scm |  TASK [createCronJobs : Create Prune-Build Cronjob YAML] **************************************************************************************************************************************************************************************
2019-04-11 15:20:05,649 p=4883 u=z-scm |  ok: [localhost]
2019-04-11 15:20:05,656 p=4883 u=z-scm |  TASK [createCronJobs : Create Prune-Deployments Cronjob YAML] ********************************************************************************************************************************************************************************
2019-04-11 15:20:06,061 p=4883 u=z-scm |  ok: [localhost]
2019-04-11 15:20:06,067 p=4883 u=z-scm |  TASK [createCronJobs : Create Prune-Images Cronjob YAML] *************************************************************************************************************************************************************************************
2019-04-11 15:20:06,509 p=4883 u=z-scm |  ok: [localhost]
2019-04-11 15:20:06,523 p=4883 u=z-scm |  TASK [createRessourcesInOpenshift : Fetch admin.kubeconfig from OpenShift Master] ************************************************************************************************************************************************************
2019-04-11 15:20:06,907 p=4883 u=z-scm |  ok: [localhost -> sdea-ocpma-s100.sys.schwarz]
2019-04-11 15:20:06,923 p=4883 u=z-scm |  TASK [createRessourcesInOpenshift : Create serviceAccount and roleBinding] *******************************************************************************************************************************************************************
2019-04-11 15:20:07,718 p=4883 u=z-scm |  fatal: [localhost -> localhost]: FAILED! => {"changed": true, "cmd": ["/home/z-scm/helpershift/openshift-pruning-container/playbooks/scripts/misc-setup.sh"], "delta": "0:00:00.423570", "end": "2019-04-11 15:20:07.696982", "msg": "non-zero return code", "rc": 1, "start": "2019-04-11 15:20:07.273412", "stderr": "error: the path \"../tmp/crb.yml\" does not exist\nError: required flag(s) \"filename\" not set\n\n\nUsage:\n  oc create -f FILENAME [flags]\n\nExamples:\n  # Create a pod using the data in pod.json.\n  oc create -f pod.json\n  \n  # Create a pod based on the JSON passed into stdin.\n  cat pod.json | oc create -f -\n\nAvailable Commands:\n  clusterresourcequota Create cluster resource quota resource.\n  clusterrole          Create a ClusterRole.\n  clusterrolebinding   Create a ClusterRoleBinding for a particular ClusterRole\n  configmap            Create a configmap from a local file, directory or literal value\n  deployment           Create a deployment with the specified name.\n  deploymentconfig     Create deployment config with default options that uses a given image.\n  identity             Manually create an identity (only needed if automatic creation is disabled).\n  imagestream          Create a new empty image stream.\n  imagestreamtag       Create a new image stream tag.\n  job                  Create a job with the specified name.\n  namespace            Create a namespace with the specified name\n  poddisruptionbudget  Create a pod disruption budget with the specified name.\n  priorityclass        Create a priorityclass with the specified name.\n  quota                Create a quota with the specified name.\n  role                 Create a role with single rule.\n  rolebinding          Create a RoleBinding for a particular Role or ClusterRole\n  route                Expose containers externally via secured routes\n  secret               Create a secret using specified subcommand\n  service              Create a service using specified subcommand.\n  serviceaccount       Create a service account with the specified name\n  user                 Manually create a user (only needed if automatic creation is disabled).\n  useridentitymapping  Manually map an identity to a user.\n\nOptions:\n      --allow-missing-template-keys=true: If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats.\n      --dry-run=false: If true, only print the object that would be sent, without sending it.\n      --edit=false: Edit the API resource before creating\n  -f, --filename=[]: Filename, directory, or URL to files to use to create the resource\n  -o, --output='': Output format. One of: json|yaml|name|template|go-template|go-template-file|templatefile|jsonpath-file|jsonpath.\n      --raw='': Raw URI to POST to the server.  Uses the transport specified by the kubeconfig file.\n      --record=false: Record current kubectl command in the resource annotation. If set to false, do not record the command. If set to true, record the command. If not set, default to updating the existing annotation value only if one already exists.\n  -R, --recursive=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory.\n      --save-config=false: If true, the configuration of current object will be saved in its annotation. Otherwise, the annotation will be unchanged. This flag is useful when you want to perform kubectl apply on this object in the future.\n  -l, --selector='': Selector (label query) to filter on, supports '=', '==', and '!='.(e.g. -l key1=value1,key2=value2)\n      --template='': Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview].\n      --validate=false: If true, use a schema to validate the input before sending it\n      --windows-line-endings=false: Only relevant if --edit=true. Defaults to the line ending native to your platform.\n\nUse \"oc <command> --help\" for more information about a given command.\nUse \"oc options\" for a list of global command-line options (applies to all commands).", "stderr_lines": ["error: the path \"../tmp/crb.yml\" does not exist", "Error: required flag(s) \"filename\" not set", "", "", "Usage:", "  oc create -f FILENAME [flags]", "", "Examples:", "  # Create a pod using the data in pod.json.", "  oc create -f pod.json", "  ", "  # Create a pod based on the JSON passed into stdin.", "  cat pod.json | oc create -f -", "", "Available Commands:", "  clusterresourcequota Create cluster resource quota resource.", "  clusterrole          Create a ClusterRole.", "  clusterrolebinding   Create a ClusterRoleBinding for a particular ClusterRole", "  configmap            Create a configmap from a local file, directory or literal value", "  deployment           Create a deployment with the specified name.", "  deploymentconfig     Create deployment config with default options that uses a given image.", "  identity             Manually create an identity (only needed if automatic creation is disabled).", "  imagestream          Create a new empty image stream.", "  imagestreamtag       Create a new image stream tag.", "  job                  Create a job with the specified name.", "  namespace            Create a namespace with the specified name", "  poddisruptionbudget  Create a pod disruption budget with the specified name.", "  priorityclass        Create a priorityclass with the specified name.", "  quota                Create a quota with the specified name.", "  role                 Create a role with single rule.", "  rolebinding          Create a RoleBinding for a particular Role or ClusterRole", "  route                Expose containers externally via secured routes", "  secret               Create a secret using specified subcommand", "  service              Create a service using specified subcommand.", "  serviceaccount       Create a service account with the specified name", "  user                 Manually create a user (only needed if automatic creation is disabled).", "  useridentitymapping  Manually map an identity to a user.", "", "Options:", "      --allow-missing-template-keys=true: If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats.", "      --dry-run=false: If true, only print the object that would be sent, without sending it.", "      --edit=false: Edit the API resource before creating", "  -f, --filename=[]: Filename, directory, or URL to files to use to create the resource", "  -o, --output='': Output format. One of: json|yaml|name|template|go-template|go-template-file|templatefile|jsonpath-file|jsonpath.", "      --raw='': Raw URI to POST to the server.  Uses the transport specified by the kubeconfig file.", "      --record=false: Record current kubectl command in the resource annotation. If set to false, do not record the command. If set to true, record the command. If not set, default to updating the existing annotation value only if one already exists.", "  -R, --recursive=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory.", "      --save-config=false: If true, the configuration of current object will be saved in its annotation. Otherwise, the annotation will be unchanged. This flag is useful when you want to perform kubectl apply on this object in the future.", "  -l, --selector='': Selector (label query) to filter on, supports '=', '==', and '!='.(e.g. -l key1=value1,key2=value2)", "      --template='': Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview].", "      --validate=false: If true, use a schema to validate the input before sending it", "      --windows-line-endings=false: Only relevant if --edit=true. Defaults to the line ending native to your platform.", "", "Use \"oc <command> --help\" for more information about a given command.", "Use \"oc options\" for a list of global command-line options (applies to all commands)."], "stdout": "", "stdout_lines": []}
2019-04-11 15:20:07,720 p=4883 u=z-scm |  PLAY RECAP ***********************************************************************************************************************************************************************************************************************************
2019-04-11 15:20:07,721 p=4883 u=z-scm |  localhost                  : ok=7    changed=0    unreachable=0    failed=1   
2019-04-11 15:21:25,643 passlib.registry registered 'md5_crypt' handler: <class 'passlib.handlers.md5_crypt.md5_crypt'>
2019-04-11 15:21:25,650 p=5189 u=z-scm |  PLAY [localhost] *****************************************************************************************************************************************************************************************************************************
2019-04-11 15:21:25,663 p=5189 u=z-scm |  TASK [createDirectory : Create tmp directory for YAML files] *********************************************************************************************************************************************************************************
2019-04-11 15:21:25,995 p=5189 u=z-scm |  ok: [localhost]
2019-04-11 15:21:26,001 p=5189 u=z-scm |  TASK [createServiceAccount : Create ServiceAccount YAML] *************************************************************************************************************************************************************************************
2019-04-11 15:21:26,471 p=5189 u=z-scm |  ok: [localhost]
2019-04-11 15:21:26,476 p=5189 u=z-scm |  TASK [createRoleBinding : Create RoleBinding YAML] *******************************************************************************************************************************************************************************************
2019-04-11 15:21:26,775 p=5189 u=z-scm |  ok: [localhost]
2019-04-11 15:21:26,780 p=5189 u=z-scm |  TASK [createCronJobs : Create Prune-Build Cronjob YAML] **************************************************************************************************************************************************************************************
2019-04-11 15:21:27,128 p=5189 u=z-scm |  ok: [localhost]
2019-04-11 15:21:27,135 p=5189 u=z-scm |  TASK [createCronJobs : Create Prune-Deployments Cronjob YAML] ********************************************************************************************************************************************************************************
2019-04-11 15:21:27,429 p=5189 u=z-scm |  ok: [localhost]
2019-04-11 15:21:27,435 p=5189 u=z-scm |  TASK [createCronJobs : Create Prune-Images Cronjob YAML] *************************************************************************************************************************************************************************************
2019-04-11 15:21:27,743 p=5189 u=z-scm |  ok: [localhost]
2019-04-11 15:21:27,755 p=5189 u=z-scm |  TASK [createRessourcesInOpenshift : Fetch admin.kubeconfig from OpenShift Master] ************************************************************************************************************************************************************
2019-04-11 15:21:28,145 p=5189 u=z-scm |  ok: [localhost -> sdea-ocpma-s100.sys.schwarz]
2019-04-11 15:21:28,154 p=5189 u=z-scm |  TASK [createRessourcesInOpenshift : Create serviceAccount and roleBinding] *******************************************************************************************************************************************************************
2019-04-11 15:21:28,817 p=5189 u=z-scm |  fatal: [localhost -> localhost]: FAILED! => {"changed": true, "cmd": ["/home/z-scm/helpershift/openshift-pruning-container/playbooks/scripts/misc-setup.sh"], "delta": "0:00:00.369504", "end": "2019-04-11 15:21:28.804010", "msg": "non-zero return code", "rc": 1, "start": "2019-04-11 15:21:28.434506", "stderr": "error: the path \"../tmp/crb.yml\" does not exist\nerror: the path \"../tmp/sa.yml\" does not exist", "stderr_lines": ["error: the path \"../tmp/crb.yml\" does not exist", "error: the path \"../tmp/sa.yml\" does not exist"], "stdout": "", "stdout_lines": []}
2019-04-11 15:21:28,818 p=5189 u=z-scm |  PLAY RECAP ***********************************************************************************************************************************************************************************************************************************
2019-04-11 15:21:28,819 p=5189 u=z-scm |  localhost                  : ok=7    changed=0    unreachable=0    failed=1   
2019-04-11 15:22:13,684 passlib.registry registered 'md5_crypt' handler: <class 'passlib.handlers.md5_crypt.md5_crypt'>
2019-04-11 15:22:13,692 p=5462 u=z-scm |  PLAY [localhost] *****************************************************************************************************************************************************************************************************************************
2019-04-11 15:22:13,705 p=5462 u=z-scm |  TASK [createDirectory : Create tmp directory for YAML files] *********************************************************************************************************************************************************************************
2019-04-11 15:22:14,037 p=5462 u=z-scm |  ok: [localhost]
2019-04-11 15:22:14,042 p=5462 u=z-scm |  TASK [createServiceAccount : Create ServiceAccount YAML] *************************************************************************************************************************************************************************************
2019-04-11 15:22:14,510 p=5462 u=z-scm |  ok: [localhost]
2019-04-11 15:22:14,516 p=5462 u=z-scm |  TASK [createRoleBinding : Create RoleBinding YAML] *******************************************************************************************************************************************************************************************
2019-04-11 15:22:14,811 p=5462 u=z-scm |  ok: [localhost]
2019-04-11 15:22:14,816 p=5462 u=z-scm |  TASK [createCronJobs : Create Prune-Build Cronjob YAML] **************************************************************************************************************************************************************************************
2019-04-11 15:22:15,101 p=5462 u=z-scm |  ok: [localhost]
2019-04-11 15:22:15,107 p=5462 u=z-scm |  TASK [createCronJobs : Create Prune-Deployments Cronjob YAML] ********************************************************************************************************************************************************************************
2019-04-11 15:22:15,388 p=5462 u=z-scm |  ok: [localhost]
2019-04-11 15:22:15,393 p=5462 u=z-scm |  TASK [createCronJobs : Create Prune-Images Cronjob YAML] *************************************************************************************************************************************************************************************
2019-04-11 15:22:15,695 p=5462 u=z-scm |  ok: [localhost]
2019-04-11 15:22:15,706 p=5462 u=z-scm |  TASK [createRessourcesInOpenshift : Fetch admin.kubeconfig from OpenShift Master] ************************************************************************************************************************************************************
2019-04-11 15:22:16,073 p=5462 u=z-scm |  ok: [localhost -> sdea-ocpma-s100.sys.schwarz]
2019-04-11 15:22:16,082 p=5462 u=z-scm |  TASK [createRessourcesInOpenshift : Create serviceAccount and roleBinding] *******************************************************************************************************************************************************************
2019-04-11 15:22:16,882 p=5462 u=z-scm |  fatal: [localhost -> localhost]: FAILED! => {"changed": true, "cmd": ["/home/z-scm/helpershift/openshift-pruning-container/playbooks/scripts/misc-setup.sh"], "delta": "0:00:00.371180", "end": "2019-04-11 15:22:16.865652", "msg": "non-zero return code", "rc": 1, "start": "2019-04-11 15:22:16.494472", "stderr": "error: the path \"../tmp/crb.yml\" does not exist\nerror: the path \"../tmp/sa.yml\" does not exist", "stderr_lines": ["error: the path \"../tmp/crb.yml\" does not exist", "error: the path \"../tmp/sa.yml\" does not exist"], "stdout": "total 20K\ndrwxrwxr-x 4 z-scm z-scm 4.0K Apr 11 15:13 .\ndrwxrwxr-x 4 z-scm z-scm 4.0K Apr 11 15:13 ..\n-rw-rw-r-- 1 z-scm z-scm  402 Apr 11 14:09 main.yml\ndrwxrwxr-x 2 z-scm z-scm 4.0K Apr 11 15:22 scripts\ndrwxrwxr-x 2 z-scm z-scm 4.0K Apr 11 15:11 tmp", "stdout_lines": ["total 20K", "drwxrwxr-x 4 z-scm z-scm 4.0K Apr 11 15:13 .", "drwxrwxr-x 4 z-scm z-scm 4.0K Apr 11 15:13 ..", "-rw-rw-r-- 1 z-scm z-scm  402 Apr 11 14:09 main.yml", "drwxrwxr-x 2 z-scm z-scm 4.0K Apr 11 15:22 scripts", "drwxrwxr-x 2 z-scm z-scm 4.0K Apr 11 15:11 tmp"]}
2019-04-11 15:22:16,883 p=5462 u=z-scm |  PLAY RECAP ***********************************************************************************************************************************************************************************************************************************
2019-04-11 15:22:16,883 p=5462 u=z-scm |  localhost                  : ok=7    changed=0    unreachable=0    failed=1   
2019-04-11 15:22:48,173 passlib.registry registered 'md5_crypt' handler: <class 'passlib.handlers.md5_crypt.md5_crypt'>
2019-04-11 15:22:48,181 p=5885 u=z-scm |  PLAY [localhost] *****************************************************************************************************************************************************************************************************************************
2019-04-11 15:22:48,194 p=5885 u=z-scm |  TASK [createDirectory : Create tmp directory for YAML files] *********************************************************************************************************************************************************************************
2019-04-11 15:22:48,533 p=5885 u=z-scm |  ok: [localhost]
2019-04-11 15:22:48,539 p=5885 u=z-scm |  TASK [createServiceAccount : Create ServiceAccount YAML] *************************************************************************************************************************************************************************************
2019-04-11 15:22:49,033 p=5885 u=z-scm |  ok: [localhost]
2019-04-11 15:22:49,038 p=5885 u=z-scm |  TASK [createRoleBinding : Create RoleBinding YAML] *******************************************************************************************************************************************************************************************
2019-04-11 15:22:49,340 p=5885 u=z-scm |  ok: [localhost]
2019-04-11 15:22:49,346 p=5885 u=z-scm |  TASK [createCronJobs : Create Prune-Build Cronjob YAML] **************************************************************************************************************************************************************************************
2019-04-11 15:22:49,658 p=5885 u=z-scm |  ok: [localhost]
2019-04-11 15:22:49,664 p=5885 u=z-scm |  TASK [createCronJobs : Create Prune-Deployments Cronjob YAML] ********************************************************************************************************************************************************************************
2019-04-11 15:22:49,965 p=5885 u=z-scm |  ok: [localhost]
2019-04-11 15:22:49,970 p=5885 u=z-scm |  TASK [createCronJobs : Create Prune-Images Cronjob YAML] *************************************************************************************************************************************************************************************
2019-04-11 15:22:50,277 p=5885 u=z-scm |  ok: [localhost]
2019-04-11 15:22:50,289 p=5885 u=z-scm |  TASK [createRessourcesInOpenshift : Fetch admin.kubeconfig from OpenShift Master] ************************************************************************************************************************************************************
2019-04-11 15:22:50,684 p=5885 u=z-scm |  ok: [localhost -> sdea-ocpma-s100.sys.schwarz]
2019-04-11 15:22:50,695 p=5885 u=z-scm |  TASK [createRessourcesInOpenshift : Create serviceAccount and roleBinding] *******************************************************************************************************************************************************************
2019-04-11 15:22:53,654 p=5885 u=z-scm |  changed: [localhost -> localhost]
2019-04-11 15:22:53,664 p=5885 u=z-scm |  TASK [createRessourcesInOpenshift : Create cronjobs] *****************************************************************************************************************************************************************************************
2019-04-11 15:22:54,002 p=5885 u=z-scm |  fatal: [localhost -> localhost]: FAILED! => {"changed": true, "cmd": ["/home/z-scm/helpershift/openshift-pruning-container/playbooks/scripts/cronjobs-setup.sh"], "delta": "0:00:00.193247", "end": "2019-04-11 15:22:53.986497", "msg": "non-zero return code", "rc": 1, "start": "2019-04-11 15:22:53.793250", "stderr": "error: stat ../playbooks/tmp/admin.kubgeconfig: no such file or directory", "stderr_lines": ["error: stat ../playbooks/tmp/admin.kubgeconfig: no such file or directory"], "stdout": "", "stdout_lines": []}
2019-04-11 15:22:54,005 p=5885 u=z-scm |  PLAY RECAP ***********************************************************************************************************************************************************************************************************************************
2019-04-11 15:22:54,005 p=5885 u=z-scm |  localhost                  : ok=8    changed=1    unreachable=0    failed=1   
